{"ast":null,"code":"var _jsxFileName = \"/Users/kavyasreesoma/Documents/shikshanaFrontEnd/src/Components/RelatedCourses/RelatedCourses.js\",\n  _s = $RefreshSig$();\nimport '../RelatedCourses/RelatedCourses.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RelatedCourses = ({\n  singleProfile\n}) => {\n  _s();\n  const [queryParameters, setQueryParameters] = useState({\n    Class: [],\n    Subject: []\n  });\n  const {\n    Course\n  } = singleProfile;\n  console.log(Course);\n  useEffect(() => {\n    if (Course) {\n      const classes = [];\n      const subjects = [];\n      Course.forEach(element => {\n        if (!classes.includes(element.Class)) {\n          classes.push(element.Class);\n        }\n        if (!subjects.includes(element.Subject)) {\n          subjects.push(element.Subject);\n        }\n      });\n      setQueryParameters({\n        Class: classes,\n        Subject: subjects\n      });\n    }\n  }, [Course]);\n  const params = new URLSearchParams();\n  for (const key in queryParameters) {\n    if (Array.isArray(queryParameters[key])) {\n      queryParameters[key].forEach(value => params.append(key, value));\n    } else {\n      console.log(key, queryParameters[key]);\n      params.append(key, queryParameters[key]);\n    }\n  }\n  const [profiles, setProfiles] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`http://localhost:3500/api/filter`, {\n          params\n        });\n        setProfiles(data);\n        console.log(profiles);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [queryParameters]);\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"RelatedCourses\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n};\n_s(RelatedCourses, \"9+BWl1kUuhyG3f7MaIRsrYlCsh0=\");\n_c = RelatedCourses;\nvar _c;\n$RefreshReg$(_c, \"RelatedCourses\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","RelatedCourses","singleProfile","_s","queryParameters","setQueryParameters","Class","Subject","Course","console","log","classes","subjects","forEach","element","includes","push","params","URLSearchParams","key","Array","isArray","value","append","profiles","setProfiles","data","get","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kavyasreesoma/Documents/shikshanaFrontEnd/src/Components/RelatedCourses/RelatedCourses.js"],"sourcesContent":["import '../RelatedCourses/RelatedCourses.css'\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nexport const RelatedCourses = ({singleProfile}) => {\n\n    const [queryParameters, setQueryParameters] = useState({ Class: [], Subject:[] });\n\n    const {Course} = singleProfile\n    console.log(Course)\n\n    useEffect(() => {\n        if (Course) {\n            const classes = [];\n            const subjects = [];\n            Course.forEach(element => {\n                if (!classes.includes(element.Class)) {\n                    classes.push(element.Class);\n                }\n                if (!subjects.includes(element.Subject)) {\n                    subjects.push(element.Subject);\n                }\n            });\n\n            setQueryParameters({ Class: classes, Subject: subjects });\n        }\n    }, [Course]);\n\n    const params = new URLSearchParams();\n    for (const key in queryParameters) {\n        if (Array.isArray(queryParameters[key])) {\n            queryParameters[key].forEach(value => params.append(key, value));\n        } else {\n            console.log(key, queryParameters[key]);\n            params.append(key, queryParameters[key]);\n        }\n    }\n\n    const [profiles, setProfiles] = useState([]);\n    useEffect(() => {\n        (async () => {\n            try {\n                const {data} = await axios.get(`http://localhost:3500/api/filter`, { params });\n                setProfiles(data)\n                console.log(profiles)\n            } catch (error) {\n                console.log(error);\n            }\n        })();\n    }, [queryParameters])\n    return <h3>RelatedCourses</h3>\n}"],"mappings":";;AAAA,OAAO,sCAAsC;AAC7C,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAACC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAE/C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC;IAAEU,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAC;EAAG,CAAC,CAAC;EAEjF,MAAM;IAACC;EAAM,CAAC,GAAGN,aAAa;EAC9BO,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAEnBX,SAAS,CAAC,MAAM;IACZ,IAAIW,MAAM,EAAE;MACR,MAAMG,OAAO,GAAG,EAAE;MAClB,MAAMC,QAAQ,GAAG,EAAE;MACnBJ,MAAM,CAACK,OAAO,CAACC,OAAO,IAAI;QACtB,IAAI,CAACH,OAAO,CAACI,QAAQ,CAACD,OAAO,CAACR,KAAK,CAAC,EAAE;UAClCK,OAAO,CAACK,IAAI,CAACF,OAAO,CAACR,KAAK,CAAC;QAC/B;QACA,IAAI,CAACM,QAAQ,CAACG,QAAQ,CAACD,OAAO,CAACP,OAAO,CAAC,EAAE;UACrCK,QAAQ,CAACI,IAAI,CAACF,OAAO,CAACP,OAAO,CAAC;QAClC;MACJ,CAAC,CAAC;MAEFF,kBAAkB,CAAC;QAAEC,KAAK,EAAEK,OAAO;QAAEJ,OAAO,EAAEK;MAAS,CAAC,CAAC;IAC7D;EACJ,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,MAAMS,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpC,KAAK,MAAMC,GAAG,IAAIf,eAAe,EAAE;IAC/B,IAAIgB,KAAK,CAACC,OAAO,CAACjB,eAAe,CAACe,GAAG,CAAC,CAAC,EAAE;MACrCf,eAAe,CAACe,GAAG,CAAC,CAACN,OAAO,CAACS,KAAK,IAAIL,MAAM,CAACM,MAAM,CAACJ,GAAG,EAAEG,KAAK,CAAC,CAAC;IACpE,CAAC,MAAM;MACHb,OAAO,CAACC,GAAG,CAACS,GAAG,EAAEf,eAAe,CAACe,GAAG,CAAC,CAAC;MACtCF,MAAM,CAACM,MAAM,CAACJ,GAAG,EAAEf,eAAe,CAACe,GAAG,CAAC,CAAC;IAC5C;EACJ;EAEA,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACZ,CAAC,YAAY;MACT,IAAI;QACA,MAAM;UAAC6B;QAAI,CAAC,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAE,kCAAiC,EAAE;UAAEV;QAAO,CAAC,CAAC;QAC9EQ,WAAW,CAACC,IAAI,CAAC;QACjBjB,OAAO,CAACC,GAAG,CAACc,QAAQ,CAAC;MACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZnB,OAAO,CAACC,GAAG,CAACkB,KAAK,CAAC;MACtB;IACJ,CAAC,EAAE,CAAC;EACR,CAAC,EAAE,CAACxB,eAAe,CAAC,CAAC;EACrB,oBAAOJ,OAAA;IAAA6B,QAAA,EAAI;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAClC,CAAC;AAAA9B,EAAA,CA/CYF,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}