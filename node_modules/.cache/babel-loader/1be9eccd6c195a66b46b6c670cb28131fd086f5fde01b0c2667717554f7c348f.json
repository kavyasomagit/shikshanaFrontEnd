{"ast":null,"code":"var _jsxFileName = \"/Users/kavyasreesoma/Documents/shikshanaFrontEnd/src/Components/filterbox/filterbox.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useState, useEffect } from \"react\";\nimport \"./filterbox.css\";\nimport { SingleFilter } from \"../singleFilter/singleFilter\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterBox = ({\n  onQueryParametersChange\n}) => {\n  _s();\n  //const dataCategory = [{Category: \"online\"}, {Category: \"home_tutions\"},{Category: \"in_person\"}, {Category: \"home_tutions1\"}, {Category: \"home_tutions2\"},{Category: \"home_tutions3\"}, {Category: \"home_tutions4\"}]                \n  //const dataCity = [{City: \"Bangalore\"}, {City: \"Manglore\"}, {City: \"Vishakapatnam\"}, {City: \"Hyderabad\"}];\n  const [filterNames, setfilterNames] = useState([]);\n  const [filterOption, setfilterOption] = useState({});\n  useEffect(() => {\n    (async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://shikshana.vercel.app/api/filter/filterOptions`);\n        setfilterNames(data[0].filterName);\n        setfilterOption(data[0].filterOptions);\n        //console.log(\"aneesh\",data[0].filterOptions)\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Filter-heading\",\n      children: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Singlefilter\",\n      children: filterNames.map(filter => /*#__PURE__*/_jsxDEV(SingleFilter, {\n        data: filterOption[filter],\n        filter: filter,\n        onQueryParametersChange: onQueryParametersChange\n      }, filter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 8\n  }, this);\n};\n_s(FilterBox, \"4jf1tQRpX/HXnW486+n3j+gUlsU=\");\n_c = FilterBox;\nvar _c;\n$RefreshReg$(_c, \"FilterBox\");","map":{"version":3,"names":["Fragment","useState","useEffect","SingleFilter","axios","jsxDEV","_jsxDEV","FilterBox","onQueryParametersChange","_s","filterNames","setfilterNames","filterOption","setfilterOption","data","get","filterName","filterOptions","error","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","filter","_c","$RefreshReg$"],"sources":["/Users/kavyasreesoma/Documents/shikshanaFrontEnd/src/Components/filterbox/filterbox.js"],"sourcesContent":["import { Fragment, useState, useEffect} from \"react\"\nimport \"./filterbox.css\";\nimport { SingleFilter } from \"../singleFilter/singleFilter\";\nimport axios from 'axios';\n\n\nexport const FilterBox = ({ onQueryParametersChange }) => {\n\n    //const dataCategory = [{Category: \"online\"}, {Category: \"home_tutions\"},{Category: \"in_person\"}, {Category: \"home_tutions1\"}, {Category: \"home_tutions2\"},{Category: \"home_tutions3\"}, {Category: \"home_tutions4\"}]                \n    //const dataCity = [{City: \"Bangalore\"}, {City: \"Manglore\"}, {City: \"Vishakapatnam\"}, {City: \"Hyderabad\"}];\n    const [filterNames, setfilterNames] = useState([]);\n    const [filterOption, setfilterOption] = useState({});\n    \n    useEffect(() => {\n        (async () => {\n            try {\n                const {data} = await axios.get(`https://shikshana.vercel.app/api/filter/filterOptions`);\n                setfilterNames(data[0].filterName)\n                setfilterOption((data[0].filterOptions))\n                //console.log(\"aneesh\",data[0].filterOptions)\n            } catch (error) {\n                console.log(error);\n            }\n        })();\n    },[])\n\n    return (\n       <Fragment>\n            <h1 className=\"Filter-heading\">Filter</h1>\n            <div className=\"Singlefilter\">\n            {/* <SingleFilter data={dataCategory} filter={\"Category\"} onQueryParametersChange={onQueryParametersChange} />\n            <SingleFilter data={dataCity} filter={\"City\"} onQueryParametersChange={onQueryParametersChange}/> */}\n            {filterNames.map((filter) => (\n                    <SingleFilter \n                        key={filter} \n                        data={filterOption[filter]} \n                        filter={filter} \n                        onQueryParametersChange={onQueryParametersChange} \n                    />\n                ))}\n            </div>\n            \n       </Fragment>\n        \n    )\n} "],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACpD,OAAO,iBAAiB;AACxB,SAASC,YAAY,QAAQ,8BAA8B;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAwB,CAAC,KAAK;EAAAC,EAAA;EAEtD;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,CAAC,YAAY;MACT,IAAI;QACA,MAAM;UAACY;QAAI,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,uDAAsD,CAAC;QACvFJ,cAAc,CAACG,IAAI,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC;QAClCH,eAAe,CAAEC,IAAI,CAAC,CAAC,CAAC,CAACG,aAAc,CAAC;QACxC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC,EAAE,CAAC;EACR,CAAC,EAAC,EAAE,CAAC;EAEL,oBACGZ,OAAA,CAACN,QAAQ;IAAAqB,QAAA,gBACJf,OAAA;MAAIgB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CpB,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAD,QAAA,EAG5BX,WAAW,CAACiB,GAAG,CAAEC,MAAM,iBAChBtB,OAAA,CAACH,YAAY;QAETW,IAAI,EAAEF,YAAY,CAACgB,MAAM,CAAE;QAC3BA,MAAM,EAAEA,MAAO;QACfpB,uBAAuB,EAAEA;MAAwB,GAH5CoB,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAGlB,CAAC;AAAAjB,EAAA,CAvCYF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}